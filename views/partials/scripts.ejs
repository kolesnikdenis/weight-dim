<html lang="ru">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- Latest compiled and minified CSS -->
	 <link rel="stylesheet" href="/public/bootstrap_4.1.3/css/bootstrap.min.css">
	 <script src="https://unpkg.com/ionicons@4.2.2/dist/ionicons.js"></script>
	<script>

var fun_filter_goods  = (in_array_filter,in_obj)=>{
    //var val = Object.values(in_obj);
    //var key=Object.keys(in_obj);
    var work_obj=in_obj;
    var out={}
    if (in_array_filter.length>0) {
        for (let [key, value] of Object.entries(work_obj)) {
            var test = true;
            for ( var ii=0; in_array_filter.length >ii; ii++ ){
                if (value==in_array_filter[ii] ) {
                    test=false;
                }
            }
            if (test ) { out[key] = value; }{/*console.log("del goods:", value )*/}
        }

    }
    else {
        out=in_obj;
    }/*
    if ( val.length >0 && in_array_filter.length>0)
        for ( var i =0; val.length>i; i++){
            var test = true;
            for ( var ii=0; in_array_filter.length >ii; ii++ ){
                if (val[i] ==in_array_filter[ii] ) {
                    test=false;
                }
            }
            if (test ) { out[key[i]] = val[i]; }{console.log("del:", val[i] )}

        }
    else { out = in_obj;  }*/
    return out;
}


/*
$('.portfolio_filter').each(function(){
    var $this_filter = $(this);
    $this_filter.on('click', 'a', function(){
        var project_type = $(this).data('optionValue').slice(1);
        var url = window.location.href;
        if (url.indexOf('?') >= 0) {
            url = url.slice(0, window.location.href.indexOf('?'));
        }
        if (project_type) {
            url = url + '?type=' + project_type;
        }
        console.log('url: ' + url);
        window.history.replaceState(null, document.title, url);
        return false;
    });
});
*/

var ctx;
var osc;
window.onload = function() {
 //console.log("reload:",event.currentTarget.performance.navigation.type);
 var AudioContext = window.AudioContext || window.webkitAudioContext;
 ctx = new AudioContext();
 //console.info(localStorage.getItem('reload'),'reload');
 if ( event.currentTarget.performance.navigation.type == 1  ) {
	if ( localStorage.getItem('reload') == "0" ) {
		//localStorage.setItem('reload',1);
		location.reload();
		localStorage.setItem('reload',1);
		//console.log("reload");
	}else {  localStorage.setItem('reload',0) };
}
else { localStorage.setItem('reload',0) };
  osc = ctx.createOscillator();
  osc.frequency.value = 1100
  osc.start();
//Play(20,3100);
//console.log(window);
}


Play = (function() {
 // var AudioContext = window.AudioContext || window.webkitAudioContext;
//var ctx = new AudioContext();

  //var ctx = new(AudioContext || webkitAudioContext);
  console.log("ctx",ctx); 
  return function(duration, freq, finishedCallback) {
    duration = +duration;
    if (typeof finishedCallback != "function") {
      finishedCallback = function() {};
    }
    var osc = ctx.createOscillator();
    osc.type = 10;
    osc.connect(ctx.destination);
    osc.frequency.value = freq;
    
    if (osc.start) osc.start();
    else osc.noteOn(0);
    
    setTimeout(
      function() {
        if (osc.stop) osc.stop(0);
        else osc.noteOff(0);
        finishedCallback();
      }, duration
    );
  };
})();
/*function beep(){
	console.log("test");
 Play(50, 1100); 
}*/


function beep(){
	$('body').addClass('scanBody');
	console.log("beep");
        
	/*
	console.log("create audio context",ctx,osc);
	var ctx = new AudioContext();
	var osc = ctx.createOscillator();
	osc.frequency.value = 1100;
	osc.start();
	*/

	function randomIntFromInterval(min,max) // min and max included
	{
		return Math.floor(Math.random()*(max-min+1)+min);
	}
	//console.log(ctx);
	//ctx.resume().then(() => {
	    
	//    console.log('Playback resumed successfully',osc);
	    osc.connect(ctx.destination);
	    var t=setTimeout((t)=>{
	        osc.disconnect(ctx.destination);
        	//ctx.close();
	        $('body').removeClass('scanBody');
	    	},200);
	//});
//ctx.close();

    /*
    osc.connect(ctx.destination);
    var t=setTimeout(function(t){
        osc.disconnect(ctx.destination);
	ctx.close();
	$('body').removeClass('scanBody');
    },200);
*/
}


var get_scan1 = (in_r)=>{
	//console.log("background_scan");
	$.ajax({
		url: '/background_scan',
		type: 'GET',
		dataType:'json',
		contentType: "application/json", cache: false,timeout:1000,
		complete: function(aa){
			//console.log(aa, "success");
			if (aa.status==200 && aa.statusText=="OK"){
				if (in_r==1){
					location.reload();
				}
				if (in_r==2){  // get obj ves
					//get_arr_ves();
					reload_date_ves(aa.responseJSON);
				}
				if (in_r==3){
					reload_data();
				}
				beep();
			}
		},
		error:	function(){
		}
	});
}



//var fun_rename_goods_one = (filter,in_obj) => {

var fun_rename_goods = (filter,in_obj)=>{
    //console.log(in_obj);
    var  work_obj = in_obj;
    for (let [key, value] of Object.entries(work_obj)) {
        //console.log(key,"find value:", value);
        for (let [find_val, set_val] of Object.entries(filter)) {
            if (find_val == value) {
                //console.log("меняем на set_val:",set_val);
                work_obj[key]=set_val;
            }
        }
    }
    return work_obj;
}
var  funFilter = (in_array_filter,in_obj)=>{
    var val = Object.values(in_obj);
    var key=Object.keys(in_obj);
    var out={}
    if ( val.length >0 && in_array_filter.length>0)
        for ( var i =0; val.length>i; i++){
            var test = true;
            for ( var ii=0; in_array_filter.length >ii; ii++ ){
                if (val[i] ==in_array_filter[ii] ) {
                    test=false;
                }
            }
            if (test ) { out[key[i]] = val[i]; }{/*console.log("del:", val[i] )*/}

        }
    else { out = in_obj;  }
    return out;
}
</script>
<!-- 22.11.18 -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js" integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T" crossorigin="anonymous"></script>

<!-- end 22.11.18 -->


<!--  Open Sans Google Fonts -->
	<link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">

<!-- Optional theme -->
	<link rel="stylesheet" href="/public/bootstrap_4.1.3/css/bootstrap-reboot.min.css">
 	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

<!-- Latest compiled and minified JavaScript -->
	<script src="/public/bootstrap_4.1.3/js/bootstrap.min.js"></script>
  <!-- bootstrap-select -->
  <link rel="stylesheet" href="https://cdn.rawgit.com/infostreams/bootstrap-select/fd227d46de2afed300d97fd0962de80fa71afb3b/dist/css/bootstrap-select.min.css" />
  <script src="https://cdn.rawgit.com/infostreams/bootstrap-select/fd227d46de2afed300d97fd0962de80fa71afb3b/dist/js/bootstrap-select.min.js"></script>
<!-- FontAwesome -->
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.4.1/css/all.css" integrity="sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz" crossorigin="anonymous">

<!-- Favicon -->
    <link rel="icon" href="/public/img/logo-favicon.png" type="image/x-icon">
    <link rel="shortcut icon" href="#" type="image/x-icon">

<!-- Main CSS -->
	<link rel="stylesheet" href="/public/css/main.css">
</head>

<script>
  $( document ).ready(function() {
// History API 
//console.log("history:", JSON.stringify(window.history),window.history.previous.href);
//req.get('host') + req.originalUrl
if( window.history && window.history.pushState ){
  history.pushState( "nohb", null, "" );
  $(window).on( "popstate", function(event){
    if( !event.originalEvent.state ){
      history.pushState( "nohb", null, "" );
      alert("только органами управления программы\nсмотрите подсказки в программе")
      return;
    }
  });
}
//

    var t="<%= (!!locals.type_operation)?type_operation:'' %>";
    console.log(t);
    var header_text;
    if (t=="shipment")
       header_text="Отгрузка"
    else 
       header_text="Приход товара"
      $(".header_text").append(header_text);
 });
  
    /*function saveInvoice(){
      alert("Завершите формирование накладной");
    }*/
    $( document ).ready(function() {

        $('.reconnect-link').click(function(e) {
        console.log("reconnect");
    $.ajax({
        url: "http://192.168.0.112:5000/reboot",
        type: "GET",
        dataType: "json",
        contentType: "application/json",cache: false,timeout: 5000,
        complete: function (aa) {
            console.log(aa);
            if (aa.status==200)
            alert("перзагрузки успешна");

        },
        success: function (data) {
            //$("#output0").val(data+" кг.");
            //send_to_server_obj();
            //console.log(data);
        },
        error: function () {
            alert("ошибка перзагрузки");
        }
    });
});
        
var file=<%- (!!locals.file)?file:'0' %>;
console.log("file:",file);
    if (file  =="1" ){
	console.log('block link');
    for (var i = 0; $('.block_link').length >i; i++ ){
        $('.block_link')[i].href="javascript:alert('Не закрыта накладная')";
        
    }
}
});
</script>

